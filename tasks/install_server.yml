---

- name: Compose the Minio server download url
  set_fact:
    _minio_server_download_url: "http://dl.min.io/server/minio/release/linux-{{ go_arch }}/minio"

- name: "Get the Minio server checksum for {{ go_arch }} architecture"
  set_fact:
    _minio_server_checksum: "{{ lookup('url', _minio_server_download_url + '.sha256sum').split(' ')[0] }}"

- name: Create Minio group
  group:
    name: "{{ minio_group }}"
    state: present

- name: Create Minio user
  user:
    name: "{{ minio_user }}"
    group: "{{ minio_group }}"
    system: "yes"
    shell: "/usr/sbin/nologin"

- name: Create the Minio config directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0750
  with_items:
    - "{{ minio_etc_dir }}"
    - "{{ minio_cert_dir }}"
    - "{{ minio_policy_dir }}"

- name: Create the Minio data storage directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0750
  when: minio_server_make_datadirs
  with_items: "{{ minio_server_datadirs }}"

- name: Download the Minio server
  get_url:
    url: "{{ _minio_server_download_url }}"
    dest: "{{ minio_server_bin }}"
    owner: "root"
    group: "root"
    mode: 0755
    checksum: "sha256:{{ _minio_server_checksum }}"
  register: _download_server
  until: _download_server is succeeded
  retries: 5
  delay: 2
  notify: restart minio

- name: Generate the Minio server envfile
  template:
    src: minio.env.j2
    dest: "{{ minio_server_envfile }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0640
  notify: restart minio

- name: Create the Minio server systemd config
  template:
    src: minio.service.j2
    dest: "/etc/systemd/system/minio.service"
    owner: "root"
    group: "root"
    mode: 0644
  notify:
    - reload minio systemd
    - restart minio


- name: Flush handlers
  meta: flush_handlers

- name: Ensure minio is started at boot
  service:
    name: minio
    enabled: true
